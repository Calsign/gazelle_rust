load("@bazel_gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@io_bazel_rules_go//go:def.bzl", "nogo")

# gazelle:exclude build
# gazelle:exclude example
# gazelle:exclude generation_tests

# gazelle:rust_cargo_lockfile cargo.lock
# gazelle:rust_crates_prefix //3rdparty/crates:

exports_files(
    srcs = ["cargo.lock"],
    visibility = ["//visibility:public"],
)

# intended for users that just want rust
gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "//rust_language",
    ],
    visibility = ["//visibility:public"],
)

# used by this project, which uses both rust and go
gazelle_binary(
    name = "gazelle_bin_with_go",
    languages = [
        "//rust_language",
        "@bazel_gazelle//language/go",
    ],
    visibility = ["//visibility:public"],
)

gazelle(
    name = "gazelle",
    gazelle = ":gazelle_bin_with_go",
)

# gazelle:prefix github.com/calsign/gazelle_rust
gazelle(name = "gazelle_bootstrap")

gazelle(
    name = "gazelle_update_repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=go_deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)

# NOTE: need to use the version of protobuf from rules_rust so that it matches
# gazelle:resolve rust protobuf @rules_rust//proto/protobuf/3rdparty/crates:protobuf

# NOTE: use cargo_bazel to parse the lockfile
# gazelle:resolve rust cargo_bazel @rules_rust//crate_universe:cargo_bazel

# NOTE: need to use the version of serde_json from crate_universe so that it matches
# gazelle:resolve rust serde_json @rules_rust//crate_universe/3rdparty/crates:serde_json

# NOTE: would like to use more checks, but the full suite doesn't succeed on some external libraries
nogo(
    name = "nogo",
    vet = True,
    visibility = ["//visibility:public"],
)
