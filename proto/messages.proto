syntax = "proto3";

message Request {
    oneof kind {
        RustImportsRequest rust_imports = 1;
        LockfileCratesRequest lockfile_crates = 2;
    }
}

message RustImportsRequest {
    string file_path = 1;
}

/** Extra information about the source file, used to infer rule kind (e.g. binary vs. library) when
    creating new targets and to manage crate test targets. */
message Hints {
    /** Has a main function in the top-level scope. */
    bool has_main = 1;
    /** Has at least one #[test] function. */
    bool has_test = 2;
    /** Has at least one #[proc_macro] function. */
    bool has_proc_macro = 3;
}

// If successful, success = true and hints, imports, and test_imports are set.
// If there is an unrecoverable error, success = false and error_msg is the error message.
message RustImportsResponse {
    Hints hints = 1;
    repeated string imports = 2;
    repeated string test_imports = 3;
    bool success = 4;
    string error_msg = 5;
}

message LockfileCratesRequest {
    oneof lockfile {
        string lockfile_path = 1;
        string cargo_lockfile_path = 2;
    }
}

message Package {
    string name = 1;
    string crate_name = 2;
    bool proc_macro = 3;
}

message LockfileCratesResponse {
    repeated Package crates = 1;
}
